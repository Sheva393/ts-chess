{"ast":null,"code":"export let FigureNames;\n\n(function (FigureNames) {\n  FigureNames[\"FIGURE\"] = \"Figure\";\n  FigureNames[\"KING\"] = \"King\";\n  FigureNames[\"KNIGHT\"] = \" Knight\";\n  FigureNames[\"PAWN\"] = \"Pawn\";\n  FigureNames[\"QUEEN\"] = \"Quenn\";\n  FigureNames[\"ROOK\"] = \"Rook\";\n  FigureNames[\"BISHOP\"] = \"Bishop\";\n})(FigureNames || (FigureNames = {}));\n\nexport class Figure {\n  constructor(color, cell) {\n    this.color = void 0;\n    this.logo = void 0;\n    this.cell = void 0;\n    this.name = void 0;\n    this.id = void 0;\n    this.color = color;\n    this.cell = cell;\n    this.cell.figure = this;\n    this.logo = null;\n    this.name = FigureNames.FIGURE;\n    this.id = Math.random();\n  }\n\n  canMove(target) {\n    return true;\n  }\n\n  moveFigure(target) {}\n\n}","map":{"version":3,"sources":["/Users/vlad/Documents/ ts-chess/src/models/figures/Figure.ts"],"names":["FigureNames","Figure","constructor","color","cell","logo","name","id","figure","FIGURE","Math","random","canMove","target","moveFigure"],"mappings":"AAIA,WAAYA,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAUZ,OAAO,MAAMC,MAAN,CAAa;AAOhBC,EAAAA,WAAW,CAACC,KAAD,EAAgBC,IAAhB,EAA4B;AAAA,SANvCD,KAMuC;AAAA,SALvCE,IAKuC;AAAA,SAJvCD,IAIuC;AAAA,SAHvCE,IAGuC;AAAA,SAFvCC,EAEuC;AACnC,SAAKJ,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKA,IAAL,CAAUI,MAAV,GAAmB,IAAnB;AACA,SAAKH,IAAL,GAAY,IAAZ;AACA,SAAKC,IAAL,GAAYN,WAAW,CAACS,MAAxB;AACA,SAAKF,EAAL,GAAUG,IAAI,CAACC,MAAL,EAAV;AACH;;AAEDC,EAAAA,OAAO,CAACC,MAAD,EAAsB;AACzB,WAAO,IAAP;AACH;;AACDC,EAAAA,UAAU,CAACD,MAAD,EAAa,CAEtB;;AArBe","sourcesContent":["import { Colors } from \"../Colors\";\nimport logo from '../../assets/black-king.png'\nimport { Cell } from \"../Cell\";\n\nexport enum FigureNames {\n    FIGURE = 'Figure',\n    KING = 'King',\n    KNIGHT = ' Knight',\n    PAWN = 'Pawn',\n    QUEEN = 'Quenn',\n    ROOK = 'Rook',\n    BISHOP = 'Bishop'\n}\n\nexport class Figure {\n    color : Colors;\n    logo : typeof logo | null;\n    cell : Cell;\n    name: FigureNames;\n    id: number\n\n    constructor(color: Colors, cell : Cell){\n        this.color = color;\n        this.cell = cell;\n        this.cell.figure = this\n        this.logo = null;\n        this.name = FigureNames.FIGURE\n        this.id = Math.random()\n    }\n\n    canMove(target:Cell):boolean {\n        return true\n    }\n    moveFigure(target:Cell){\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}